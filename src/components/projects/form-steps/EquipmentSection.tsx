import React from 'react';
import { Checkbox } from '../../shared/Checkbox';
import type { Equipment } from '../../../types/member';

interface EquipmentSectionProps {
  equipment: Equipment;
  onEquipmentChange: (field: keyof Equipment, value: boolean) => void;
  onEquipmentSubChange: (field: keyof Equipment, value: boolean) => void;
  onEquipmentDetailsChange: (field: string, value: string) => void;
}

export function EquipmentSection({
  equipment,
  onEquipmentChange,
  onEquipmentSubChange,
  onEquipmentDetailsChange,
}: EquipmentSectionProps) {
  return (
    <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
      {/* Prepared Equipment Section */}
      <div className="bg-white rounded-lg border border-gray-200 p-6">
        <h2 className="text-xl font-semibold text-gray-900 mb-6">‚úÖ ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏°‡∏≤</h2>
        <div className="space-y-4">
          <div>
            <label className="inline-flex items-center">
              <Checkbox
                checked={equipment.cameraIncluded}
                onCheckedChange={(checked) => {
                  onEquipmentChange('cameraIncluded', checked);
                }}
              />
              <span className="ml-2">üìπ ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏°‡∏≤‡∏î‡πâ‡∏ß‡∏¢</span>
            </label>
            {equipment.cameraIncluded && (
              <div className="mt-2 space-y-2 pl-6">
                <label className="flex items-center">
                  <Checkbox
                    checked={equipment.hasCamera}
                    onCheckedChange={(checked) => onEquipmentSubChange('hasCamera', checked)}
                  />
                  <span className="ml-2">‡∏Å‡∏•‡πâ‡∏≠‡∏á</span>
                </label>
                <label className="flex items-center">
                  <Checkbox
                    checked={equipment.hasTripod}
                    onCheckedChange={(checked) => onEquipmentSubChange('hasTripod', checked)}
                  />
                  <span className="ml-2">‡∏Ç‡∏≤‡∏ï‡∏±‡πâ‡∏á‡∏Å‡∏•‡πâ‡∏≠‡∏á</span>
                </label>
                <label className="flex items-center">
                  <Checkbox
                    checked={equipment.hasMonitor}
                    onCheckedChange={(checked) => onEquipmentSubChange('hasMonitor', checked)}
                  />
                  <span className="ml-2">‡∏à‡∏≠‡∏°‡∏≠‡∏ô‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå</span>
                </label>
                <div className="mt-2">
                  <input
                    type="text"
                    placeholder="‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏≠‡∏∑‡πà‡∏ô‡πÜ"
                    value={equipment.otherCameraEquipment || ''}
                    onChange={(e) => onEquipmentDetailsChange('otherCameraEquipment', e.target.value)}
                    className="form-input w-full"
                  />
                </div>
              </div>
            )}
          </div>

          <div>
            <label className="inline-flex items-center">
              <Checkbox
                checked={equipment.soundIncluded}
                onCheckedChange={(checked) => {
                  onEquipmentChange('soundIncluded', checked);
                }}
              />
              <span className="ml-2">üé§ ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏°‡∏≤‡∏î‡πâ‡∏ß‡∏¢</span>
            </label>
            {equipment.soundIncluded && (
              <div className="mt-2 space-y-2 pl-6">
                <label className="flex items-center">
                  <Checkbox
                    checked={equipment.hasShotgunMic}
                    onCheckedChange={(checked) => onEquipmentSubChange('hasShotgunMic', checked)}
                  />
                  <span className="ml-2">‡πÑ‡∏°‡∏Ñ‡πå‡∏ä‡πá‡∏≠‡∏ï‡∏Å‡∏±‡∏ô</span>
                </label>
                <label className="flex items-center">
                  <Checkbox
                    checked={equipment.hasWirelessMic}
                    onCheckedChange={(checked) => onEquipmentSubChange('hasWirelessMic', checked)}
                  />
                  <span className="ml-2">‡πÑ‡∏°‡∏Ñ‡πå‡πÑ‡∏£‡πâ‡∏™‡∏≤‡∏¢</span>
                </label>
                <label className="flex items-center">
                  <Checkbox
                    checked={equipment.hasBoomMic}
                    onCheckedChange={(checked) => onEquipmentSubChange('hasBoomMic', checked)}
                  />
                  <span className="ml-2">‡πÑ‡∏°‡∏Ñ‡πå‡∏ö‡∏π‡∏°</span>
                </label>
                <label className="flex items-center">
                  <Checkbox
                    checked={equipment.hasSoundRecorder}
                    onCheckedChange={(checked) => onEquipmentSubChange('hasSoundRecorder', checked)}
                  />
                  <span className="ml-2">‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏™‡∏µ‡∏¢‡∏á</span>
                </label>
                <div className="mt-2">
                  <input
                    type="text"
                    placeholder="‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏≠‡∏∑‡πà‡∏ô‡πÜ"
                    value={equipment.otherSoundEquipment || ''}
                    onChange={(e) => onEquipmentDetailsChange('otherSoundEquipment', e.target.value)}
                    className="form-input w-full"
                  />
                </div>
              </div>
            )}
          </div>

          <div>
            <label className="inline-flex items-center">
              <Checkbox
                checked={equipment.lightingIncluded}
                onCheckedChange={(checked) => {
                  onEquipmentChange('lightingIncluded', checked);
                }}
              />
              <span className="ml-2">üí° ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÑ‡∏ü‡∏°‡∏≤‡∏î‡πâ‡∏ß‡∏¢</span>
            </label>
            {equipment.lightingIncluded && (
              <div className="mt-2 pl-6">
                <input
                  type="text"
                  placeholder="‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÑ‡∏ü"
                  value={equipment.lightingDetails || ''}
                  onChange={(e) => onEquipmentDetailsChange('lightingDetails', e.target.value)}
                  className="form-input w-full"
                />
              </div>
            )}
          </div>

          <div>
            <label className="inline-flex items-center">
              <Checkbox
                checked={equipment.computerIncluded}
                onCheckedChange={(checked) => {
                  onEquipmentChange('computerIncluded', checked);
                }}
              />
              <span className="ml-2">üíª ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏ï‡∏±‡∏î‡∏ï‡πà‡∏≠‡∏°‡∏≤‡∏î‡πâ‡∏ß‡∏¢</span>
            </label>
            {equipment.computerIncluded && (
              <div className="mt-2 space-y-2 pl-6">
                <label className="flex items-center">
                  <Checkbox
                    checked={equipment.hasMacBook}
                    onCheckedChange={(checked) => onEquipmentSubChange('hasMacBook', checked)}
                  />
                  <span className="ml-2">‡πÅ‡∏°‡∏Ñ‡∏ö‡∏∏‡πä‡∏Ñ</span>
                </label>
                <label className="flex items-center">
                  <Checkbox
                    checked={equipment.hasPC}
                    onCheckedChange={(checked) => onEquipmentSubChange('hasPC', checked)}
                  />
                  <span className="ml-2">‡∏û‡∏µ‡∏ã‡∏µ/‡πÇ‡∏ô‡πâ‡∏ï‡∏ö‡∏∏‡πä‡∏Ñ</span>
                </label>
                <label className="flex items-center">
                  <Checkbox
                    checked={equipment.hasSSD}
                    onCheckedChange={(checked) => onEquipmentSubChange('hasSSD', checked)}
                  />
                  <span className="ml-2">‡πÄ‡∏≠‡∏™‡πÄ‡∏≠‡∏™‡∏î‡∏µ</span>
                </label>
                <label className="flex items-center">
                  <Checkbox
                    checked={equipment.hasHDD}
                    onCheckedChange={(checked) => onEquipmentSubChange('hasHDD', checked)}
                  />
                  <span className="ml-2">‡∏Æ‡∏≤‡∏£‡πå‡∏î‡∏î‡∏¥‡∏™‡∏Å‡πå</span>
                </label>
                <label className="flex items-center">
                  <Checkbox
                    checked={equipment.hasComputerMonitor}
                    onCheckedChange={(checked) => onEquipmentSubChange('hasComputerMonitor', checked)}
                  />
                  <span className="ml-2">‡∏à‡∏≠‡∏°‡∏≠‡∏ô‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå</span>
                </label>
                <div className="mt-2">
                  <input
                    type="text"
                    placeholder="‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏≠‡∏∑‡πà‡∏ô‡πÜ"
                    value={equipment.otherComputerEquipment || ''}
                    onChange={(e) => onEquipmentDetailsChange('otherComputerEquipment', e.target.value)}
                    className="form-input w-full"
                  />
                </div>
              </div>
            )}
          </div>
        </div>
      </div>

      {/* Required Equipment Section */}
      <div className="bg-white rounded-lg border border-gray-200 p-6">
        <h2 className="text-xl font-semibold text-gray-900 mb-6">üèïÔ∏è ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏´‡πâ‡∏Ñ‡πà‡∏≤‡∏¢‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡πÉ‡∏´‡πâ</h2>
          <p className="text-red-600 mb-6">** ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏ó‡∏≤‡∏á‡∏Ñ‡πà‡∏≤‡∏¢‡∏à‡∏±‡∏î‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡∏ï‡∏≤‡∏°‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏Å‡∏±‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ì‡πå **</p>
        <div className="space-y-4">
          <div>
            <label className="inline-flex items-center">
              <Checkbox
                checked={equipment.requireCamera}
                onCheckedChange={(checked) => {
                  onEquipmentChange('requireCamera', checked);
                }}
              />
              <span className="ml-2">üìπ ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Å‡∏•‡πâ‡∏≠‡∏á‡πÉ‡∏´‡πâ</span>
            </label>
            {equipment.requireCamera && (
              <div className="mt-2 space-y-2 pl-6">
                <label className="flex items-center">
                  <Checkbox
                    checked={equipment.requireCameraBody}
                    onCheckedChange={(checked) => onEquipmentSubChange('requireCameraBody', checked)}
                  />
                  <span className="ml-2">‡∏Å‡∏•‡πâ‡∏≠‡∏á</span>
                </label>
                <label className="flex items-center">
                  <Checkbox
                    checked={equipment.requireTripod}
                    onCheckedChange={(checked) => onEquipmentSubChange('requireTripod', checked)}
                  />
                  <span className="ml-2">‡∏Ç‡∏≤‡∏ï‡∏±‡πâ‡∏á‡∏Å‡∏•‡πâ‡∏≠‡∏á</span>
                </label>
                <label className="flex items-center">
                  <Checkbox
                    checked={equipment.requireMonitor}
                    onCheckedChange={(checked) => onEquipmentSubChange('requireMonitor', checked)}
                  />
                  <span className="ml-2">‡∏à‡∏≠‡∏°‡∏≠‡∏ô‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå</span>
                </label>
                <div className="mt-2">
                  <input
                    type="text"
                    placeholder="‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£"
                    value={equipment.requiredCameraDetails || ''}
                    onChange={(e) => onEquipmentDetailsChange('requiredCameraDetails', e.target.value)}
                    className="form-input w-full"
                  />
                </div>
              </div>
            )}
          </div>

          <div>
            <label className="inline-flex items-center">
              <Checkbox
                checked={equipment.requireSound}
                onCheckedChange={(checked) => {
                  onEquipmentChange('requireSound', checked);
                }}
              />
              <span className="ml-2">üé§ ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡πâ</span>
            </label>
            {equipment.requireSound && (
              <div className="mt-2 space-y-2 pl-6">
                <label className="flex items-center">
                  <Checkbox
                    checked={equipment.requireShotgunMic}
                    onCheckedChange={(checked) => onEquipmentSubChange('requireShotgunMic', checked)}
                  />
                  <span className="ml-2">‡πÑ‡∏°‡∏Ñ‡πå‡∏ä‡πá‡∏≠‡∏ï‡∏Å‡∏±‡∏ô</span>
                </label>
                <label className="flex items-center">
                  <Checkbox
                    checked={equipment.requireWirelessMic}
                    onCheckedChange={(checked) => onEquipmentSubChange('requireWirelessMic', checked)}
                  />
                  <span className="ml-2">‡πÑ‡∏°‡∏Ñ‡πå‡πÑ‡∏£‡πâ‡∏™‡∏≤‡∏¢</span>
                </label>
                <label className="flex items-center">
                  <Checkbox
                    checked={equipment.requireBoomMic}
                    onCheckedChange={(checked) => onEquipmentSubChange('requireBoomMic', checked)}
                  />
                  <span className="ml-2">‡πÑ‡∏°‡∏Ñ‡πå‡∏ö‡∏π‡∏°</span>
                </label>
                <label className="flex items-center">
                  <Checkbox
                    checked={equipment.requireSoundRecorder}
                    onCheckedChange={(checked) => onEquipmentSubChange('requireSoundRecorder', checked)}
                  />
                  <span className="ml-2">‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏™‡∏µ‡∏¢‡∏á</span>
                </label>
                <div className="mt-2">
                  <input
                    type="text"
                    placeholder="‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£"
                    value={equipment.requiredSoundDetails || ''}
                    onChange={(e) => onEquipmentDetailsChange('requiredSoundDetails', e.target.value)}
                    className="form-input w-full"
                  />
                </div>
              </div>
            )}
          </div>

          <div>
            <label className="inline-flex items-center">
              <Checkbox
                checked={equipment.requireLighting}
                onCheckedChange={(checked) => {
                  onEquipmentChange('requireLighting', checked);
                }}
              />
              <span className="ml-2">üí° ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÑ‡∏ü‡πÉ‡∏´‡πâ</span>
            </label>
            {equipment.requireLighting && (
              <div className="mt-2 pl-6">
                <input
                  type="text"
                  placeholder="‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÑ‡∏ü‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£"
                  value={equipment.requiredLightingDetails || ''}
                  onChange={(e) => onEquipmentDetailsChange('requiredLightingDetails', e.target.value)}
                  className="form-input w-full"
                />
              </div>
            )}
          </div>

          <div>
            <label className="inline-flex items-center">
              <Checkbox
                checked={equipment.requireComputer}
                onCheckedChange={(checked) => {
                  onEquipmentChange('requireComputer', checked);
                }}
              />
              <span className="ml-2">üíª ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÉ‡∏´‡πâ</span>
            </label>
            {equipment.requireComputer && (
              <div className="mt-2 space-y-2 pl-6">
                <label className="flex items-center">
                  <Checkbox
                    checked={equipment.requireMacBook}
                    onCheckedChange={(checked) => onEquipmentSubChange('requireMacBook', checked)}
                  />
                  <span className="ml-2">‡πÅ‡∏°‡∏Ñ‡∏ö‡∏∏‡πä‡∏Ñ</span>
                </label>
                <label className="flex items-center">
                  <Checkbox
                    checked={equipment.requirePC}
                    onCheckedChange={(checked) => onEquipmentSubChange('requirePC', checked)}
                  />
                  <span className="ml-2">‡∏û‡∏µ‡∏ã‡∏µ/‡πÇ‡∏ô‡πâ‡∏ï‡∏ö‡∏∏‡πä‡∏Ñ</span>
                </label>
                <label className="flex items-center">
                  <Checkbox
                    checked={equipment.requireSSD}
                    onCheckedChange={(checked) => onEquipmentSubChange('requireSSD', checked)}
                  />
                  <span className="ml-2">‡πÄ‡∏≠‡∏™‡πÄ‡∏≠‡∏™‡∏î‡∏µ</span>
                </label>
                <label className="flex items-center">
                  <Checkbox
                    checked={equipment.requireHDD}
                    onCheckedChange={(checked) => onEquipmentSubChange('requireHDD', checked)}
                  />
                  <span className="ml-2">‡∏Æ‡∏≤‡∏£‡πå‡∏î‡∏î‡∏¥‡∏™‡∏Å‡πå</span>
                </label>
                <label className="flex items-center">
                  <Checkbox
                    checked={equipment.requireComputerMonitor}
                    onCheckedChange={(checked) => onEquipmentSubChange('requireComputerMonitor', checked)}
                  />
                  <span className="ml-2">‡∏à‡∏≠‡∏°‡∏≠‡∏ô‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå</span>
                </label>
                <div className="mt-2">
                  <input
                    type="text"
                    placeholder="‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£"
                    value={equipment.requiredComputerDetails || ''}
                    onChange={(e) => onEquipmentDetailsChange('requiredComputerDetails', e.target.value)}
                    className="form-input w-full"
                  />
                </div>
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  );
}